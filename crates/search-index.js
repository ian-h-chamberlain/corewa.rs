var searchIndex = JSON.parse('{\
"corewars":{"doc":"","t":[0,5],"n":["cli","run"],"q":["corewars","corewars::cli"],"d":["",""],"i":[0,0],"f":[null,[[],[["result",4],["box",3]]]],"p":[]},\
"corewars_core":{"doc":"","t":[14,0,13,13,13,4,13,13,13,3,13,13,13,13,13,13,13,3,13,13,13,13,13,3,6,13,13,13,13,6,13,13,3,13,4,13,13,13,3,4,13,13,13,13,13,3,4,13,13,13,13,13,13,4,3,13,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["enum_string","load_file","A","AB","Add","AddressMode","B","BA","Cmp","DEFAULT_CONSTANTS","Dat","Direct","Div","Djn","End","Equ","F","Field","For","I","Immediate","IndirectA","IndirectB","Instruction","Instructions","Jmn","Jmp","Jmz","Label","LabelMap","Ldp","Literal","Metadata","Mod","Modifier","Mov","Mul","Nop","Offset","Opcode","Org","PostIncIndirectA","PostIncIndirectB","PreDecIndirectA","PreDecIndirectB","Program","PseudoOpcode","Seq","Slt","Sne","Spl","Stp","Sub","Value","Warrior","X","a_field","add","add","add","add_assign","add_assign","add_assign","address_mode","as_offset","assertion","author","b_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","date","default","default","default","default","default","default","default","default","default","default_88_to_94","deref","direct","direct_label","div","div","div","div_assign","div_assign","div_assign","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","get","immediate","initialize","instructions","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","iter_values","iter_values","iter_values","iter_values","len","metadata","modifier","mul","mul","mul","mul_assign","mul_assign","mul_assign","name","ne","ne","ne","ne","ne","ne","new","new","opcode","origin","parse_line","program","redcode","rem","rem","rem","rem_assign","rem_assign","rem_assign","set","set_value","set_value","strategy","sub","sub","sub","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","unwrap_value","value","value","version"],"q":["corewars_core","","corewars_core::load_filed":["Generate an enum impl with string conversion methods.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata about a Redcode program that is stored in the …","","","","","","A non-negative offset from the beginning of a core.","","","","","","","A parsed Redcode program, which can be loaded into a core …","","","","","","","","","The main public struct used to represent a Redcode warrior","","","Panics if the  right-hand side has a different <code>core_size</code> …","","","","","","","","An assertion for this warrior to ensure compilation.","The author of this warrior.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The date when this warrior was written.","","","","","","","","","","","","","","","Panics if the  right-hand side has a different <code>core_size</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The list of instructions in the program. These are …","","","","","","","","","","","","","Whether the warrior’s program is empty (i.e. 0 …","","","","","The number of instrcutions defined in this Warrior’s …","","","Panics if the  right-hand side has a different <code>core_size</code> …","","","","","","The name of this warrior.","","","","","","","Create a new Offset. The value will be adjusted to be …","","","The program’s entry point as an instruction index","Parse warrior metadata out of a line. Any comments will …","","The Redcode standard for this warrior (e.g. “94”).","","","Panics if the  right-hand side has a different <code>core_size</code> …","","","","","Set the value of the offset. The value will be adjusted …","","A description of the warrior’s strategy","","","Panics if the  right-hand side has a different <code>core_size</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the offset. This will always be less …","","The version of this warrior."],"i":[0,0,1,1,2,0,1,1,2,0,2,3,2,2,4,4,1,0,4,1,3,3,3,0,0,2,2,2,5,0,2,5,0,2,0,2,2,2,0,0,4,3,3,3,3,0,0,2,2,2,2,2,2,0,0,1,6,7,7,7,7,7,7,8,8,9,9,6,9,7,10,2,4,1,3,5,11,12,8,6,9,7,10,2,4,1,3,5,11,12,8,6,7,2,4,1,3,5,8,6,7,2,4,1,3,5,8,6,9,9,10,2,1,3,5,12,8,6,1,11,8,8,7,7,7,7,7,7,9,7,10,2,4,1,3,5,8,6,9,9,7,7,10,10,2,2,4,4,1,1,3,3,5,5,12,12,8,8,6,6,9,7,10,2,4,1,3,5,5,11,12,8,6,2,4,1,3,10,8,11,10,9,7,10,2,4,1,3,5,11,12,8,6,12,2,4,1,3,12,12,6,7,7,7,7,7,7,9,9,7,10,5,8,6,7,6,6,10,9,12,9,7,7,7,7,7,7,10,7,8,9,7,7,7,7,7,7,7,2,4,1,3,5,8,6,9,7,10,2,4,1,3,5,12,8,6,9,7,10,2,4,1,3,5,11,12,8,6,9,7,10,2,4,1,3,5,11,12,8,6,9,7,10,2,4,1,3,5,11,12,8,6,5,8,7,8,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["i32",15]]],[[["u32",15]]],[[]],[[["u32",15]]],[[["i32",15]]],null,[[["u32",15]],["offset",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["offset",3]],[[],["opcode",4]],[[],["pseudoopcode",4]],[[],["modifier",4]],[[],["addressmode",4]],[[],["value",4]],[[],["field",3]],[[],["instruction",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["metadata",3]],[[],["program",3]],[[]],[[]],[[]],[[]],[[],["warrior",3]],[[],["field",3]],[[],["instruction",3]],[[["opcode",4],["addressmode",4]]],[[],["labelmap",6]],[[["i32",15]]],[[["tostring",8]]],[[["i32",15]]],[[]],[[["u32",15]]],[[]],[[["i32",15]]],[[["u32",15]]],[[["metadata",3]],["bool",15]],[[["offset",3]],["bool",15]],[[["program",3]],["bool",15]],[[["opcode",4]],["bool",15]],[[["pseudoopcode",4]],["bool",15]],[[["modifier",4]],["bool",15]],[[["addressmode",4]],["bool",15]],[[["value",4]],["bool",15]],[[["field",3]],["bool",15]],[[["instruction",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["usize",15]],[["option",4],["instruction",3]]],[[["i32",15]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["iter",3]],[[],["iter",3]],[[],["iter",3]],[[],["u32",15]],null,null,[[]],[[["i32",15]]],[[["u32",15]]],[[["u32",15]]],[[["i32",15]]],[[]],null,[[["metadata",3]],["bool",15]],[[["offset",3]],["bool",15]],[[["program",3]],["bool",15]],[[["value",4]],["bool",15]],[[["field",3]],["bool",15]],[[["instruction",3]],["bool",15]],[[["u32",15],["i32",15]]],[[["opcode",4],["field",3]]],null,null,[[["str",15]],["string",3]],null,null,[[["i32",15]]],[[["u32",15]]],[[]],[[]],[[["i32",15]]],[[["u32",15]]],[[["usize",15],["instruction",3]]],[[["i32",15]]],[[["offset",3]]],null,[[["i32",15]]],[[["u32",15]]],[[]],[[["u32",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["i32",15]],[[],["i32",15]],[[],["u32",15]],null,null],"p":[[4,"Modifier"],[4,"Opcode"],[4,"AddressMode"],[4,"PseudoOpcode"],[4,"Value"],[3,"Instruction"],[3,"Offset"],[3,"Field"],[3,"Metadata"],[3,"Program"],[3,"DEFAULT_CONSTANTS"],[3,"Warrior"]]},\
"corewars_parser":{"doc":"This module is used for parsing a Redcode program. It …","t":[13,13,13,4,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["EmptyOffset","EmptySubstitution","Err","Error","InvalidArguments","InvalidOrigin","InvalidSyntax","LabelNotFound","Ok","OriginRedefinition","Result","Warning","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","eq","eq","err","expect","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","ne","ne","ne","ok","parse","source","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","label","line","opcode","new","old"],"q":["corewars_parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","corewars_parser::Error","","","corewars_parser::Warning",""],"d":["Offset label declaration with no instruction.","Empty EQU substitution.","Contains the error value and zero or more warnings","An error that occurred while parsing a warrior.","The given opcode was not given enough arguments.","An invalid warrior origin (not a positive integer) was …","The input string was ill-formed Redcode syntax.","The warrior contained a reference to a label that doesn’…","Contains the success value and zero or more warnings","Attempt to define the warrior origin more than once.","<code>Result</code> mimics the <code>std::result::Result</code> type, but each …","A warning that occurred while parsing a warrior.","","","","","","","","","","Create an <code>Err</code> variant from an error.","Unwrap the parse result, panicking with the given mesasge …","","","","","","","","","","","","","","","","","","","Create an <code>Ok</code> variant from a value.","Parse a given input string into a <code>Result</code>. If successful …","","","","","","","","","","","","","Unwrap the parse result, panicking if it was not an <code>Ok</code>.","","","","",""],"i":[1,1,2,0,3,3,3,3,2,1,0,0,3,1,2,3,1,2,3,1,2,2,2,3,3,1,1,2,3,3,3,1,2,2,2,3,1,2,3,1,2,2,0,3,3,1,3,1,2,3,1,2,3,1,2,2,4,4,5,6,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["error",4]],["bool",15]],[[["warning",4]],["bool",15]],[[["result",4]],["bool",15]],[[["error",4]]],[[["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["rule",4],["error",3]]],[[["tryfrominterror",3]]],[[]],[[["error",4]]],[[["stdresult",4],["error",4]]],[[]],[[]],[[]],[[]],[[["error",4]],["bool",15]],[[["warning",4]],["bool",15]],[[["result",4]],["bool",15]],[[]],[[["str",15]],[["warrior",3],["result",4]]],[[],[["option",4],["error",8]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null],"p":[[4,"Warning"],[4,"Result"],[4,"Error"],[13,"LabelNotFound"],[13,"InvalidArguments"],[13,"OriginRedefinition"]]},\
"corewars_sim":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Core","borrow","borrow_mut","default","fmt","fmt","from","get","get_mut","into","load_warrior","new","run","size","step","steps_taken","to_string","try_from","try_into","type_id"],"q":["corewars_sim","","","","","","","","","","","","","","","","","","",""],"d":["The full memory core at a given point in time","","","","","","","Get an instruction from a given index in the core","Get a mutable instruction from a given index in the core","","Load a <code>Warrior</code> into the core starting at the front (first …","Create a new Core with the given number of possible …","Run a core to completion. Return value determines whether …","Get the number of instructions in the core (available to …","Run a single cycle of simulation. This will continue to …","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["i32",15]],["instruction",3]],[[["i32",15]],["instruction",3]],[[]],[[["warrior",3]],[["result",4],["error",4]]],[[["u32",15]],[["result",4],["error",4]]],[[["option",4],["into",8]],[["error",4],["result",4]]],[[],["u32",15]],[[],[["error",4],["result",4]]],[[],["usize",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Core"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};